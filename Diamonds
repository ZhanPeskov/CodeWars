public class Solution {
    public static void main(String[] args) {
        System.out.println(Diamond.print(-2));
        System.out.println(Diamond.print(-1));
        System.out.println(Diamond.print(0));
        System.out.println(Diamond.print(1));
        System.out.println(Diamond.print(2));
        System.out.println(Diamond.print(3));
        System.out.println(Diamond.print(4));
        System.out.println(Diamond.print(5));
        System.out.println(Diamond.print(6));
        System.out.println(Diamond.print(7));
        System.out.println(Diamond.print(8));
    }

}

public class Diamond {
    public static String print(int n) {
        if (n < 0 || n % 2 == 0) {
            return null;
        }

        int middle = (n + 1) >> 1, direction = 1;
        //StringBuffer result = new StringBuffer((middle + 1) * n + (middle - 1) * (middle - 1));
        StringBuffer result = new StringBuffer(middle * (middle - 2 + n) + 1 + n);

        for (int i = 1; i > 0; i += direction) {
            result.append(" ".repeat(middle - i) + "*".repeat((i << 1) - 1) + "\n");

            if (i == middle) {
                direction = -1;
            }
        }

        return result.toString();
    }
}
